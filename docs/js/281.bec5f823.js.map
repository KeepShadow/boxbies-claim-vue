{"version":3,"file":"js/281.bec5f823.js","mappings":"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","sources":["webpack://vue-web3/../src/client.ts","webpack://vue-web3/../src/controllers/RouterCtrl.ts","webpack://vue-web3/../src/utils/CoreUtil.ts","webpack://vue-web3/../src/controllers/EventsCtrl.ts","webpack://vue-web3/../src/controllers/OptionsCtrl.ts","webpack://vue-web3/../src/controllers/ConfigCtrl.ts","webpack://vue-web3/../src/utils/ExplorerUtil.ts","webpack://vue-web3/../src/controllers/ExplorerCtrl.ts","webpack://vue-web3/../src/controllers/ModalCtrl.ts","webpack://vue-web3/../src/controllers/ThemeCtrl.ts","webpack://vue-web3/../src/controllers/ToastCtrl.ts","webpack://vue-web3/../src/utils/PolyfillUtil.ts"],"sourcesContent":["import type { ConfigCtrlState, ThemeCtrlState } from '@walletconnect/modal-core'\nimport { ConfigCtrl, ModalCtrl, OptionsCtrl, ThemeCtrl } from '@walletconnect/modal-core'\n\n/**\n * Types\n */\nexport type WalletConnectModalConfig = ConfigCtrlState & ThemeCtrlState\n\n/**\n * Client\n */\nexport class WalletConnectModal {\n  public constructor(config: WalletConnectModalConfig) {\n    ThemeCtrl.setThemeConfig(config)\n    ConfigCtrl.setConfig(config)\n    this.initUi()\n  }\n\n  private async initUi() {\n    if (typeof window !== 'undefined') {\n      await import('@walletconnect/modal-ui')\n      const modal = document.createElement('wcm-modal')\n      document.body.insertAdjacentElement('beforeend', modal)\n      OptionsCtrl.setIsUiLoaded(true)\n    }\n  }\n\n  public openModal = ModalCtrl.open\n\n  public closeModal = ModalCtrl.close\n\n  public subscribeModal = ModalCtrl.subscribe\n\n  public setTheme = ThemeCtrl.setThemeConfig\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  reset(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    if (state.history.length > 1) {\n      state.history[state.history.length - 1] = view\n      state.view = view\n    }\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  },\n\n  setData(data: RouterCtrlState['data']) {\n    state.data = data\n  }\n}\n","import { RouterCtrl } from '../controllers/RouterCtrl'\n\nexport const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  WCM_VERSION: 'WCM_VERSION',\n\n  RECOMMENDED_WALLET_AMOUNT: 9,\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isIos() {\n    const ua = navigator.userAgent.toLowerCase()\n\n    return CoreUtil.isMobile() && (ua.includes('iphone') || ua.includes('ipad'))\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  isArray<T>(data?: T | T[]): data is T[] {\n    return Array.isArray(data) && data.length > 0\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    const [href] = wcUri.split('?')\n\n    localStorage.setItem(\n      CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n      JSON.stringify({ href, name: 'Android' })\n    )\n  },\n\n  removeWalletConnectDeepLink() {\n    localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n  },\n\n  setModalVersionInStorage() {\n    if (typeof localStorage !== 'undefined') {\n      localStorage.setItem(CoreUtil.WCM_VERSION, process.env.ROLLUP_WCM_VERSION ?? 'UNKNOWN')\n    }\n  },\n\n  getWalletRouterData() {\n    const routerData = RouterCtrl.state.data?.Wallet\n    if (!routerData) {\n      throw new Error('Missing \"Wallet\" view data')\n    }\n\n    return routerData\n  }\n}\n","import { proxy, snapshot, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { EventsCtrlState, ModalEvent, ModalEventData } from '../types/controllerTypes'\n\n// -- helpers ------------------------------------------------------ //\nconst isEnabled =\n  typeof location !== 'undefined' &&\n  (location.hostname.includes('localhost') || location.protocol.includes('https'))\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<EventsCtrlState>({\n  enabled: isEnabled,\n  userSessionId: '',\n  events: [],\n  connectedWalletId: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const EventsCtrl = {\n  state,\n\n  subscribe(callback: (newEvent: ModalEvent) => void) {\n    return valtioSub(state.events, () => callback(snapshot(state.events[state.events.length - 1])))\n  },\n\n  initialize() {\n    if (state.enabled && typeof crypto?.randomUUID !== 'undefined') {\n      state.userSessionId = crypto.randomUUID()\n    }\n  },\n\n  setConnectedWalletId(connectedWalletId: EventsCtrlState['connectedWalletId']) {\n    state.connectedWalletId = connectedWalletId\n  },\n\n  click(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'CLICK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  track(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'TRACK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  view(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'VIEW' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  chains: undefined,\n  walletConnectUri: undefined,\n  isAuth: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setWalletConnectUri(walletConnectUri: OptionsCtrlState['walletConnectUri']) {\n    state.walletConnectUri = walletConnectUri\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setIsAuth(isAuth: OptionsCtrlState['isAuth']) {\n    state.isAuth = isAuth\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { EventsCtrl } from './EventsCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chains: undefined,\n  enableAuthMode: false,\n  enableExplorer: true,\n  explorerExcludedWalletIds: undefined,\n  explorerRecommendedWalletIds: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    EventsCtrl.initialize()\n    OptionsCtrl.setChains(config.chains)\n    OptionsCtrl.setIsAuth(Boolean(config.enableAuthMode))\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n\n    CoreUtil.setModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n","import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingParams, ListingResponse } from '../types/controllerTypes'\n\n// -- Helpers -------------------------------------------------------\nconst W3M_API = 'https://explorer-api.walletconnect.com'\n\nasync function fetchListings(endpoint: string, params: ListingParams) {\n  const url = new URL(endpoint, W3M_API)\n  url.searchParams.append('projectId', ConfigCtrl.state.projectId)\n  Object.entries(params).forEach(([key, value]) => {\n    if (value) {\n      url.searchParams.append(key, String(value))\n    }\n  })\n  const request = await fetch(url)\n\n  return request.json() as Promise<ListingResponse>\n}\n\n// -- Utility -------------------------------------------------------\nexport const ExplorerUtil = {\n  async getDesktopListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getDesktopListings', params)\n  },\n\n  async getMobileListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getMobileListings', params)\n  },\n\n  async getInjectedListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getInjectedListings', params)\n  },\n\n  async getAllListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getAllListings', params)\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}`\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, ListingParams } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst isMobile = CoreUtil.isMobile()\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getRecomendedWallets() {\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n\n    // Don't fetch recomended wallets\n    if (\n      explorerRecommendedWalletIds === 'NONE' ||\n      (explorerExcludedWalletIds === 'ALL' && !explorerRecommendedWalletIds)\n    ) {\n      return state.recomendedWallets\n    }\n\n    // Fetch only recomended wallets defined in config\n    if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      const recommendedIds = explorerRecommendedWalletIds.join(',')\n      const params = { recommendedIds }\n      const { listings } = await ExplorerUtil.getAllListings(params)\n      const listingsArr = Object.values(listings)\n      listingsArr.sort((a, b) => {\n        const aIndex = explorerRecommendedWalletIds.indexOf(a.id)\n        const bIndex = explorerRecommendedWalletIds.indexOf(b.id)\n\n        return aIndex - bIndex\n      })\n      state.recomendedWallets = listingsArr\n    }\n\n    // Fetch default recomended wallets based on user's device, options and excluded config\n    else {\n      const { chains, isAuth } = OptionsCtrl.state\n      const chainsFilter = chains?.join(',')\n      const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds)\n      const params = {\n        page: 1,\n        sdks: isAuth ? 'auth_v1' : undefined,\n        entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n        chains: chainsFilter,\n        version: 2,\n        excludedIds: isExcluded ? explorerExcludedWalletIds.join(',') : undefined\n      }\n      const { listings } = isMobile\n        ? await ExplorerUtil.getMobileListings(params)\n        : await ExplorerUtil.getDesktopListings(params)\n      state.recomendedWallets = Object.values(listings)\n    }\n\n    return state.recomendedWallets\n  },\n\n  async getWallets(params: ListingParams) {\n    const extendedParams: ListingParams = { ...params }\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n    const { recomendedWallets } = state\n\n    // Don't fetch any wallets if all are excluded\n    if (explorerExcludedWalletIds === 'ALL') {\n      return state.wallets\n    }\n\n    // Don't fetch recomended wallets, as we already have these\n    if (!extendedParams.search) {\n      if (recomendedWallets.length) {\n        extendedParams.excludedIds = recomendedWallets.map(wallet => wallet.id).join(',')\n      } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n        extendedParams.excludedIds = explorerRecommendedWalletIds.join(',')\n      }\n    }\n\n    // Don't fetch user defined excluded wallets & recomended wallets\n    if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n      extendedParams.excludedIds = [extendedParams.excludedIds, explorerExcludedWalletIds]\n        .filter(Boolean)\n        .join(',')\n    }\n\n    // Fetch only auth wallets\n    if (OptionsCtrl.state.isAuth) {\n      extendedParams.sdks = 'auth_v1'\n    }\n\n    const { page, search } = params\n    const { listings: listingsObj, total } = isMobile\n      ? await ExplorerUtil.getMobileListings(extendedParams)\n      : await ExplorerUtil.getDesktopListings(extendedParams)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return ExplorerUtil.getWalletImageUrl(imageId)\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return ExplorerUtil.getAssetImageUrl(imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri: string\n  chains?: string[]\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isUiLoaded, isDataLoaded } = OptionsCtrl.state\n\n      OptionsCtrl.setWalletConnectUri(options?.uri)\n      OptionsCtrl.setChains(options?.chains)\n      RouterCtrl.reset('ConnectWallet')\n\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          const opts = OptionsCtrl.state\n          if (opts.isUiLoaded && opts.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { Buffer } from 'buffer'\n\nif (typeof window !== 'undefined') {\n  if (!window.Buffer) {\n    window.Buffer = Buffer\n  }\n  if (!window.global) {\n    window.global = window\n  }\n  if (!window.process) {\n    // @ts-expect-error minimal process\n    window.process = { env: {} }\n  }\n  if (!window.global) {\n    window.global = window\n  }\n}\n"],"names":["d","constructor","e","openModal","t","open","closeModal","close","subscribeModal","subscribe","setTheme","o","setThemeConfig","i","setConfig","this","initUi","window","document","createElement","body","insertAdjacentElement","n","setIsUiLoaded","p","history","view","data","N","state","h","push","reset","replace","length","goBack","pop","slice","setData","WALLETCONNECT_DEEPLINK_CHOICE","WCM_VERSION","RECOMMENDED_WALLET_AMOUNT","isMobile","Boolean","matchMedia","matches","test","navigator","userAgent","isAndroid","toLowerCase","includes","isIos","isHttpUrl","startsWith","isArray","Array","formatNativeUrl","s","formatUniversalUrl","replaceAll","endsWith","setWalletConnectDeepLink","r","encodeURIComponent","async","Promise","setTimeout","openHref","localStorage","setItem","JSON","stringify","href","name","setWalletConnectAndroidDeepLink","split","removeWalletConnectDeepLink","removeItem","setModalVersionInStorage","getWalletRouterData","Wallet","Error","T","location","hostname","protocol","a","enabled","userSessionId","events","connectedWalletId","$","k","initialize","crypto","randomUUID","setConnectedWalletId","click","type","timestamp","Date","now","track","l","chains","walletConnectUri","isAuth","isCustomDesktop","isCustomMobile","isDataLoaded","isUiLoaded","c","setChains","setWalletConnectUri","setIsCustomDesktop","setIsCustomMobile","setIsDataLoaded","setIsAuth","y","projectId","mobileWallets","desktopWallets","walletImages","enableAuthMode","enableExplorer","explorerExcludedWalletIds","explorerRecommendedWalletIds","termsOfServiceUrl","privacyPolicyUrl","C","Object","assign","W","L","URL","searchParams","append","entries","forEach","String","fetch","json","m","getWalletImageUrl","getAssetImageUrl","P","defineProperty","O","getOwnPropertySymbols","_","prototype","hasOwnProperty","R","propertyIsEnumerable","U","x","enumerable","configurable","writable","value","B","f","call","D","wallets","listings","total","page","search","recomendedWallets","G","recommendedIds","join","getAllListings","values","sort","u","v","w","indexOf","id","sdks","version","excludedIds","getMobileListings","getDesktopListings","map","S","filter","E","A","resetSearch","I","Q","uri","setInterval","clearInterval","H","M","V","K","j","z","J","b","themeMode","X","themeVariables","g","message","variant","Y","openToast","closeToast","Buffer","global","process","env"],"sourceRoot":""}